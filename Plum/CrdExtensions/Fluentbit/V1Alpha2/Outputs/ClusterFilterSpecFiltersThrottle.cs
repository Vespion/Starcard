// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2
{

    /// <summary>
    /// Throttle defines a Throttle configuration.
    /// </summary>
    [OutputType]
    public sealed class ClusterFilterSpecFiltersThrottle
    {
        /// <summary>
        /// Alias for the plugin
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// Interval is the time interval expressed in "sleep" format. e.g. 3s, 1.5m, 0.5h, etc.
        /// </summary>
        public readonly string Interval;
        /// <summary>
        /// PrintStatus represents whether to print status messages with current rate and the limits to information logs.
        /// </summary>
        public readonly bool PrintStatus;
        /// <summary>
        /// Rate is the amount of messages for the time.
        /// </summary>
        public readonly int Rate;
        /// <summary>
        /// RetryLimit describes how many times fluent-bit should retry to send data to a specific output. If set to false fluent-bit will try indefinetly. If set to any integer N&gt;0 it will try at most N+1 times. Leading zeros are not allowed (values such as 007, 0150, 01 do not work). If this property is not defined fluent-bit will use the default value: 1.
        /// </summary>
        public readonly string RetryLimit;
        /// <summary>
        /// Window is the amount of intervals to calculate average over.
        /// </summary>
        public readonly int Window;

        [OutputConstructor]
        private ClusterFilterSpecFiltersThrottle(
            string alias,

            string interval,

            bool printStatus,

            int rate,

            string retryLimit,

            int window)
        {
            Alias = alias;
            Interval = interval;
            PrintStatus = printStatus;
            Rate = rate;
            RetryLimit = retryLimit;
            Window = window;
        }
    }
}
