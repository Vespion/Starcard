// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2
{

    /// <summary>
    /// Stackdriver defines Stackdriver Output Configuration
    /// </summary>
    [OutputType]
    public sealed class ClusterOutputSpecStackdriver
    {
        /// <summary>
        /// Rewrite the trace field to be formatted for use with GCP Cloud Trace
        /// </summary>
        public readonly bool AutoformatStackdriverTrace;
        /// <summary>
        /// A custom regex to extract fields from the local_resource_id of the logs
        /// </summary>
        public readonly string CustomK8sRegex;
        /// <summary>
        /// The GCP Project that should receive the logs
        /// </summary>
        public readonly string ExportToProjectID;
        /// <summary>
        /// Path to GCP Credentials JSON file
        /// </summary>
        public readonly string GoogleServiceCredentials;
        /// <summary>
        /// Identifier for a grouping of tasks. Required if Resource is generic_task
        /// </summary>
        public readonly string Job;
        /// <summary>
        /// Location of the cluster that contains the pods/nodes. Required if Resource is k8s_container, k8s_node, or k8s_pod
        /// </summary>
        public readonly string K8sClusterLocation;
        /// <summary>
        /// Name of the cluster that the pod is running in. Required if Resource is k8s_container, k8s_node, or k8s_pod
        /// </summary>
        public readonly string K8sClusterName;
        /// <summary>
        /// Optional list of comma separated of strings for key/value pairs
        /// </summary>
        public readonly ImmutableArray<string> Labels;
        /// <summary>
        /// Used by Stackdriver to find related labels and extract them to LogEntry Labels
        /// </summary>
        public readonly string LabelsKey;
        /// <summary>
        /// GCP/AWS region to store data. Required if Resource is generic_node or generic_task
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The value of this field is set as the logName field in Stackdriver
        /// </summary>
        public readonly string LogNameKey;
        /// <summary>
        /// Metadata Server Prefix
        /// </summary>
        public readonly string MetadataServer;
        /// <summary>
        /// Namespace identifier. Required if Resource is generic_node or generic_task
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Node identifier within the namespace. Required if Resource is generic_node or generic_task
        /// </summary>
        public readonly string NodeID;
        /// <summary>
        /// Set resource types of data
        /// </summary>
        public readonly string Resource;
        /// <summary>
        /// Optional list of comma seperated strings. Setting these fields overrides the Stackdriver monitored resource API values
        /// </summary>
        public readonly ImmutableArray<string> ResourceLabels;
        /// <summary>
        /// Email associated with the service
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2.ClusterOutputSpecStackdriverServiceaccountemail ServiceAccountEmail;
        /// <summary>
        /// Private Key associated with the service
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2.ClusterOutputSpecStackdriverServiceaccountsecret ServiceAccountSecret;
        /// <summary>
        /// Specify the key that contains the severity information for the logs
        /// </summary>
        public readonly string SeverityKey;
        /// <summary>
        /// Used to validate the tags of logs that when the Resource is k8s_container, k8s_node, or k8s_pod
        /// </summary>
        public readonly string TagPrefix;
        /// <summary>
        /// Identifier for a task within a namespace. Required if Resource is generic_task
        /// </summary>
        public readonly string TaskID;
        /// <summary>
        /// Number of dedicated threads for the Stackdriver Output Plugin
        /// </summary>
        public readonly int Workers;

        [OutputConstructor]
        private ClusterOutputSpecStackdriver(
            bool autoformatStackdriverTrace,

            string customK8sRegex,

            string exportToProjectID,

            string googleServiceCredentials,

            string job,

            string k8sClusterLocation,

            string k8sClusterName,

            ImmutableArray<string> labels,

            string labelsKey,

            string location,

            string logNameKey,

            string metadataServer,

            string @namespace,

            string nodeID,

            string resource,

            ImmutableArray<string> resourceLabels,

            Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2.ClusterOutputSpecStackdriverServiceaccountemail serviceAccountEmail,

            Pulumi.Kubernetes.Types.Outputs.Fluentbit.V1Alpha2.ClusterOutputSpecStackdriverServiceaccountsecret serviceAccountSecret,

            string severityKey,

            string tagPrefix,

            string taskID,

            int workers)
        {
            AutoformatStackdriverTrace = autoformatStackdriverTrace;
            CustomK8sRegex = customK8sRegex;
            ExportToProjectID = exportToProjectID;
            GoogleServiceCredentials = googleServiceCredentials;
            Job = job;
            K8sClusterLocation = k8sClusterLocation;
            K8sClusterName = k8sClusterName;
            Labels = labels;
            LabelsKey = labelsKey;
            Location = location;
            LogNameKey = logNameKey;
            MetadataServer = metadataServer;
            Namespace = @namespace;
            NodeID = nodeID;
            Resource = resource;
            ResourceLabels = resourceLabels;
            ServiceAccountEmail = serviceAccountEmail;
            ServiceAccountSecret = serviceAccountSecret;
            SeverityKey = severityKey;
            TagPrefix = tagPrefix;
            TaskID = taskID;
            Workers = workers;
        }
    }
}
