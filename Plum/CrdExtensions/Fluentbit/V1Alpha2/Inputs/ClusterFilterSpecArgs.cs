// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Fluentbit.V1Alpha2
{

    /// <summary>
    /// Specification of desired Filter configuration.
    /// </summary>
    public class ClusterFilterSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Fluentbit.V1Alpha2.ClusterFilterSpecFiltersArgs>? _filters;

        /// <summary>
        /// A set of filter plugins in order.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Fluentbit.V1Alpha2.ClusterFilterSpecFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Pulumi.Kubernetes.Types.Inputs.Fluentbit.V1Alpha2.ClusterFilterSpecFiltersArgs>());
            set => _filters = value;
        }

        [Input("logLevel")]
        public Input<string>? LogLevel { get; set; }

        /// <summary>
        /// A pattern to match against the tags of incoming records. It's case-sensitive and support the star (*) character as a wildcard.
        /// </summary>
        [Input("match")]
        public Input<string>? Match { get; set; }

        /// <summary>
        /// A regular expression to match against the tags of incoming records. Use this option if you want to use the full regex syntax.
        /// </summary>
        [Input("matchRegex")]
        public Input<string>? MatchRegex { get; set; }

        public ClusterFilterSpecArgs()
        {
        }
        public static new ClusterFilterSpecArgs Empty => new ClusterFilterSpecArgs();
    }
}
