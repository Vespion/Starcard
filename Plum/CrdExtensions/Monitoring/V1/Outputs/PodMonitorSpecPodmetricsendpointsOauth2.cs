// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Monitoring.V1
{

    /// <summary>
    /// OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.
    /// </summary>
    [OutputType]
    public sealed class PodMonitorSpecPodmetricsendpointsOauth2
    {
        /// <summary>
        /// The secret or configmap containing the OAuth2 client id
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PodMonitorSpecPodmetricsendpointsOauth2Clientid ClientId;
        /// <summary>
        /// The secret containing the OAuth2 client secret
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PodMonitorSpecPodmetricsendpointsOauth2Clientsecret ClientSecret;
        /// <summary>
        /// Parameters to append to the token URL
        /// </summary>
        public readonly ImmutableDictionary<string, string> EndpointParams;
        /// <summary>
        /// OAuth2 scopes used for the token request
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// The URL to fetch the token from
        /// </summary>
        public readonly string TokenUrl;

        [OutputConstructor]
        private PodMonitorSpecPodmetricsendpointsOauth2(
            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PodMonitorSpecPodmetricsendpointsOauth2Clientid clientId,

            Pulumi.Kubernetes.Types.Outputs.Monitoring.V1.PodMonitorSpecPodmetricsendpointsOauth2Clientsecret clientSecret,

            ImmutableDictionary<string, string> endpointParams,

            ImmutableArray<string> scopes,

            string tokenUrl)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            EndpointParams = endpointParams;
            Scopes = scopes;
            TokenUrl = tokenUrl;
        }
    }
}
