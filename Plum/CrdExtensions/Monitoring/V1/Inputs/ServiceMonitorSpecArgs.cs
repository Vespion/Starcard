// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Monitoring.V1
{

    /// <summary>
    /// Specification of desired Service selection for target discovery by Prometheus.
    /// </summary>
    public class ServiceMonitorSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Attaches node metadata to discovered targets. Requires Prometheus v2.37.0 and above.
        /// </summary>
        [Input("attachMetadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecAttachmetadataArgs>? AttachMetadata { get; set; }

        [Input("endpoints", required: true)]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecEndpointsArgs>? _endpoints;

        /// <summary>
        /// A list of endpoints allowed as part of this ServiceMonitor.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecEndpointsArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecEndpointsArgs>());
            set => _endpoints = value;
        }

        /// <summary>
        /// JobLabel selects the label from the associated Kubernetes service which will be used as the `job` label for all metrics. 
        ///  For example: If in `ServiceMonitor.spec.jobLabel: foo` and in `Service.metadata.labels.foo: bar`, then the `job="bar"` label is added to all metrics. 
        ///  If the value of this field is empty or if the label doesn't exist for the given Service, the `job` label of the metrics defaults to the name of the Kubernetes Service.
        /// </summary>
        [Input("jobLabel")]
        public Input<string>? JobLabel { get; set; }

        /// <summary>
        /// Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
        /// </summary>
        [Input("labelLimit")]
        public Input<int>? LabelLimit { get; set; }

        /// <summary>
        /// Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
        /// </summary>
        [Input("labelNameLengthLimit")]
        public Input<int>? LabelNameLengthLimit { get; set; }

        /// <summary>
        /// Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
        /// </summary>
        [Input("labelValueLengthLimit")]
        public Input<int>? LabelValueLengthLimit { get; set; }

        /// <summary>
        /// Selector to select which namespaces the Kubernetes Endpoints objects are discovered from.
        /// </summary>
        [Input("namespaceSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecNamespaceselectorArgs>? NamespaceSelector { get; set; }

        [Input("podTargetLabels")]
        private InputList<string>? _podTargetLabels;

        /// <summary>
        /// PodTargetLabels transfers labels on the Kubernetes `Pod` onto the created metrics.
        /// </summary>
        public InputList<string> PodTargetLabels
        {
            get => _podTargetLabels ?? (_podTargetLabels = new InputList<string>());
            set => _podTargetLabels = value;
        }

        /// <summary>
        /// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
        /// </summary>
        [Input("sampleLimit")]
        public Input<int>? SampleLimit { get; set; }

        /// <summary>
        /// Selector to select Endpoints objects.
        /// </summary>
        [Input("selector", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Monitoring.V1.ServiceMonitorSpecSelectorArgs> Selector { get; set; } = null!;

        [Input("targetLabels")]
        private InputList<string>? _targetLabels;

        /// <summary>
        /// TargetLabels transfers labels from the Kubernetes `Service` onto the created metrics.
        /// </summary>
        public InputList<string> TargetLabels
        {
            get => _targetLabels ?? (_targetLabels = new InputList<string>());
            set => _targetLabels = value;
        }

        /// <summary>
        /// TargetLimit defines a limit on the number of scraped targets that will be accepted.
        /// </summary>
        [Input("targetLimit")]
        public Input<int>? TargetLimit { get; set; }

        public ServiceMonitorSpecArgs()
        {
        }
        public static new ServiceMonitorSpecArgs Empty => new ServiceMonitorSpecArgs();
    }
}
