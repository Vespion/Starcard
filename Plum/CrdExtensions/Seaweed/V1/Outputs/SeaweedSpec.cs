// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Seaweed.V1
{

    /// <summary>
    /// SeaweedSpec defines the desired state of Seaweed
    /// </summary>
    [OutputType]
    public sealed class SeaweedSpec
    {
        /// <summary>
        /// Affinity of pods
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecAffinity Affinity;
        /// <summary>
        /// Base annotations of Pods, components may add or override selectors upon this respectively
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Whether enable PVC reclaim for orphan PVC left by statefulset scale-in
        /// </summary>
        public readonly bool EnablePVReclaim;
        /// <summary>
        /// Filer
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecFiler Filer;
        /// <summary>
        /// Whether Hostnetwork is enabled for pods
        /// </summary>
        public readonly bool HostNetwork;
        /// <summary>
        /// Ingresses
        /// </summary>
        public readonly string HostSuffix;
        /// <summary>
        /// Image
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// ImagePullPolicy of pods
        /// </summary>
        public readonly string ImagePullPolicy;
        /// <summary>
        /// ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecImagepullsecrets> ImagePullSecrets;
        /// <summary>
        /// Master
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecMaster Master;
        /// <summary>
        /// MetricsAddress is Prometheus gateway address
        /// </summary>
        public readonly string MetricsAddress;
        /// <summary>
        /// Base node selectors of Pods, components may add or override selectors upon this respectively
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// Persistent volume reclaim policy
        /// </summary>
        public readonly string PvReclaimPolicy;
        /// <summary>
        /// SchedulerName of pods
        /// </summary>
        public readonly string SchedulerName;
        /// <summary>
        /// StatefulSetUpdateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.
        /// </summary>
        public readonly string StatefulSetUpdateStrategy;
        /// <summary>
        /// Base tolerations of Pods, components may add more tolerations upon this respectively
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecTolerations> Tolerations;
        /// <summary>
        /// Version
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// Volume
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecVolume Volume;
        public readonly int VolumeServerDiskCount;

        [OutputConstructor]
        private SeaweedSpec(
            Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecAffinity affinity,

            ImmutableDictionary<string, string> annotations,

            bool enablePVReclaim,

            Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecFiler filer,

            bool hostNetwork,

            string hostSuffix,

            string image,

            string imagePullPolicy,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecImagepullsecrets> imagePullSecrets,

            Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecMaster master,

            string metricsAddress,

            ImmutableDictionary<string, string> nodeSelector,

            string pvReclaimPolicy,

            string schedulerName,

            string statefulSetUpdateStrategy,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecTolerations> tolerations,

            string version,

            Pulumi.Kubernetes.Types.Outputs.Seaweed.V1.SeaweedSpecVolume volume,

            int volumeServerDiskCount)
        {
            Affinity = affinity;
            Annotations = annotations;
            EnablePVReclaim = enablePVReclaim;
            Filer = filer;
            HostNetwork = hostNetwork;
            HostSuffix = hostSuffix;
            Image = image;
            ImagePullPolicy = imagePullPolicy;
            ImagePullSecrets = imagePullSecrets;
            Master = master;
            MetricsAddress = metricsAddress;
            NodeSelector = nodeSelector;
            PvReclaimPolicy = pvReclaimPolicy;
            SchedulerName = schedulerName;
            StatefulSetUpdateStrategy = statefulSetUpdateStrategy;
            Tolerations = tolerations;
            Version = version;
            Volume = volume;
            VolumeServerDiskCount = volumeServerDiskCount;
        }
    }
}
