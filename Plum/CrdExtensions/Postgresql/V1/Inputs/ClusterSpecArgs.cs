// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Postgresql.V1
{

    /// <summary>
    /// Specification of the desired behavior of the cluster. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
    /// </summary>
    public class ClusterSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Affinity/Anti-affinity rules for Pods
        /// </summary>
        [Input("affinity")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecAffinityArgs>? Affinity { get; set; }

        /// <summary>
        /// The configuration to be used for backups
        /// </summary>
        [Input("backup")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecBackupArgs>? Backup { get; set; }

        /// <summary>
        /// Instructions to bootstrap this cluster
        /// </summary>
        [Input("bootstrap")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecBootstrapArgs>? Bootstrap { get; set; }

        /// <summary>
        /// The configuration for the CA and related certificates
        /// </summary>
        [Input("certificates")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecCertificatesArgs>? Certificates { get; set; }

        /// <summary>
        /// Description of this PostgreSQL cluster
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// When this option is enabled, the operator will use the `SuperuserSecret` to update the `postgres` user password (if the secret is not present, the operator will automatically create one). When this option is disabled, the operator will ignore the `SuperuserSecret` content, delete it when automatically created, and then blank the password of the `postgres` user by setting it to `NULL`. Enabled by default.
        /// </summary>
        [Input("enableSuperuserAccess")]
        public Input<bool>? EnableSuperuserAccess { get; set; }

        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvArgs>? _env;

        /// <summary>
        /// Env follows the Env format to pass environment variables to the pods created in the cluster
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvArgs>());
            set => _env = value;
        }

        [Input("envFrom")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvfromArgs>? _envFrom;

        /// <summary>
        /// EnvFrom follows the EnvFrom format to pass environment variables sources to the pods to be used by Env
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvfromArgs> EnvFrom
        {
            get => _envFrom ?? (_envFrom = new InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecEnvfromArgs>());
            set => _envFrom = value;
        }

        [Input("externalClusters")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecExternalclustersArgs>? _externalClusters;

        /// <summary>
        /// The list of external clusters which are used in the configuration
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecExternalclustersArgs> ExternalClusters
        {
            get => _externalClusters ?? (_externalClusters = new InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecExternalclustersArgs>());
            set => _externalClusters = value;
        }

        /// <summary>
        /// The amount of time (in seconds) to wait before triggering a failover after the primary PostgreSQL instance in the cluster was detected to be unhealthy
        /// </summary>
        [Input("failoverDelay")]
        public Input<int>? FailoverDelay { get; set; }

        /// <summary>
        /// Name of the container image, supporting both tags (`&lt;image&gt;:&lt;tag&gt;`) and digests for deterministic and repeatable deployments (`&lt;image&gt;:&lt;tag&gt;@sha256:&lt;digestValue&gt;`)
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// Image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
        /// </summary>
        [Input("imagePullPolicy")]
        public Input<string>? ImagePullPolicy { get; set; }

        [Input("imagePullSecrets")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecImagepullsecretsArgs>? _imagePullSecrets;

        /// <summary>
        /// The list of pull secrets to be used to pull the images
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecImagepullsecretsArgs> ImagePullSecrets
        {
            get => _imagePullSecrets ?? (_imagePullSecrets = new InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecImagepullsecretsArgs>());
            set => _imagePullSecrets = value;
        }

        /// <summary>
        /// Metadata that will be inherited by all objects related to the Cluster
        /// </summary>
        [Input("inheritedMetadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecInheritedmetadataArgs>? InheritedMetadata { get; set; }

        /// <summary>
        /// Number of instances required in the cluster
        /// </summary>
        [Input("instances", required: true)]
        public Input<int> Instances { get; set; } = null!;

        /// <summary>
        /// The instances' log level, one of the following values: error, warning, info (default), debug, trace
        /// </summary>
        [Input("logLevel")]
        public Input<string>? LogLevel { get; set; }

        /// <summary>
        /// The target value for the synchronous replication quorum, that can be decreased if the number of ready standbys is lower than this. Undefined or 0 disable synchronous replication.
        /// </summary>
        [Input("maxSyncReplicas")]
        public Input<int>? MaxSyncReplicas { get; set; }

        /// <summary>
        /// Minimum number of instances required in synchronous replication with the primary. Undefined or 0 allow writes to complete when no standby is available.
        /// </summary>
        [Input("minSyncReplicas")]
        public Input<int>? MinSyncReplicas { get; set; }

        /// <summary>
        /// The configuration of the monitoring infrastructure of this cluster
        /// </summary>
        [Input("monitoring")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecMonitoringArgs>? Monitoring { get; set; }

        /// <summary>
        /// Define a maintenance window for the Kubernetes nodes
        /// </summary>
        [Input("nodeMaintenanceWindow")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecNodemaintenancewindowArgs>? NodeMaintenanceWindow { get; set; }

        /// <summary>
        /// The GID of the `postgres` user inside the image, defaults to `26`
        /// </summary>
        [Input("postgresGID")]
        public Input<int>? PostgresGID { get; set; }

        /// <summary>
        /// The UID of the `postgres` user inside the image, defaults to `26`
        /// </summary>
        [Input("postgresUID")]
        public Input<int>? PostgresUID { get; set; }

        /// <summary>
        /// Configuration of the PostgreSQL server
        /// </summary>
        [Input("postgresql")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecPostgresqlArgs>? Postgresql { get; set; }

        /// <summary>
        /// Method to follow to upgrade the primary server during a rolling update procedure, after all replicas have been successfully updated: it can be with a switchover (`switchover` - default) or in-place (`restart`)
        /// </summary>
        [Input("primaryUpdateMethod")]
        public Input<string>? PrimaryUpdateMethod { get; set; }

        /// <summary>
        /// Strategy to follow to upgrade the primary server during a rolling update procedure, after all replicas have been successfully updated: it can be automated (`unsupervised` - default) or manual (`supervised`)
        /// </summary>
        [Input("primaryUpdateStrategy")]
        public Input<string>? PrimaryUpdateStrategy { get; set; }

        /// <summary>
        /// Template to be used to define projected volumes, projected volumes will be mounted under `/projected` base folder
        /// </summary>
        [Input("projectedVolumeTemplate")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecProjectedvolumetemplateArgs>? ProjectedVolumeTemplate { get; set; }

        /// <summary>
        /// Replica cluster configuration
        /// </summary>
        [Input("replica")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecReplicaArgs>? Replica { get; set; }

        /// <summary>
        /// Replication slots management configuration
        /// </summary>
        [Input("replicationSlots")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecReplicationslotsArgs>? ReplicationSlots { get; set; }

        /// <summary>
        /// Resources requirements of every generated Pod. Please refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ for more information.
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// Configure the generation of the service account
        /// </summary>
        [Input("serviceAccountTemplate")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecServiceaccounttemplateArgs>? ServiceAccountTemplate { get; set; }

        /// <summary>
        /// The time in seconds that is allowed for a PostgreSQL instance to successfully start up (default 30)
        /// </summary>
        [Input("startDelay")]
        public Input<int>? StartDelay { get; set; }

        /// <summary>
        /// The time in seconds that is allowed for a PostgreSQL instance to gracefully shutdown (default 30)
        /// </summary>
        [Input("stopDelay")]
        public Input<int>? StopDelay { get; set; }

        /// <summary>
        /// Configuration of the storage of the instances
        /// </summary>
        [Input("storage")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecStorageArgs>? Storage { get; set; }

        /// <summary>
        /// The secret containing the superuser password. If not defined a new secret will be created with a randomly generated password
        /// </summary>
        [Input("superuserSecret")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecSuperusersecretArgs>? SuperuserSecret { get; set; }

        /// <summary>
        /// The time in seconds that is allowed for a primary PostgreSQL instance to gracefully shutdown during a switchover. Default value is 40000000, greater than one year in seconds, big enough to simulate an infinite delay
        /// </summary>
        [Input("switchoverDelay")]
        public Input<int>? SwitchoverDelay { get; set; }

        /// <summary>
        /// Configuration of the storage for PostgreSQL WAL (Write-Ahead Log)
        /// </summary>
        [Input("walStorage")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterSpecWalstorageArgs>? WalStorage { get; set; }

        public ClusterSpecArgs()
        {
            EnableSuperuserAccess = true;
            FailoverDelay = 0;
            Instances = 1;
            LogLevel = "info";
            MaxSyncReplicas = 0;
            MinSyncReplicas = 0;
            PostgresGID = 26;
            PostgresUID = 26;
            PrimaryUpdateMethod = "switchover";
            PrimaryUpdateStrategy = "unsupervised";
            StartDelay = 30;
            StopDelay = 30;
            SwitchoverDelay = 40000000;
        }
        public static new ClusterSpecArgs Empty => new ClusterSpecArgs();
    }
}
