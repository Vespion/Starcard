// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Postgresql.V1
{

    /// <summary>
    /// Most recently observed status of the cluster. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
    /// </summary>
    public class ClusterStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AzurePVCUpdateEnabled shows if the PVC online upgrade is enabled for this cluster
        /// </summary>
        [Input("azurePVCUpdateEnabled")]
        public Input<bool>? AzurePVCUpdateEnabled { get; set; }

        /// <summary>
        /// The configuration for the CA and related certificates, initialized with defaults.
        /// </summary>
        [Input("certificates")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusCertificatesArgs>? Certificates { get; set; }

        /// <summary>
        /// The commit hash number of which this operator running
        /// </summary>
        [Input("cloudNativePGCommitHash")]
        public Input<string>? CloudNativePGCommitHash { get; set; }

        /// <summary>
        /// The hash of the binary of the operator
        /// </summary>
        [Input("cloudNativePGOperatorHash")]
        public Input<string>? CloudNativePGOperatorHash { get; set; }

        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusConditionsArgs>? _conditions;

        /// <summary>
        /// Conditions for cluster object
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusConditionsArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The list of resource versions of the configmaps, managed by the operator. Every change here is done in the interest of the instance manager, which will refresh the configmap data
        /// </summary>
        [Input("configMapResourceVersion")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusConfigmapresourceversionArgs>? ConfigMapResourceVersion { get; set; }

        /// <summary>
        /// Current primary instance
        /// </summary>
        [Input("currentPrimary")]
        public Input<string>? CurrentPrimary { get; set; }

        /// <summary>
        /// The timestamp when the primary was detected to be unhealthy This field is reported when spec.failoverDelay is populated or during online upgrades
        /// </summary>
        [Input("currentPrimaryFailingSinceTimestamp")]
        public Input<string>? CurrentPrimaryFailingSinceTimestamp { get; set; }

        /// <summary>
        /// The timestamp when the last actual promotion to primary has occurred
        /// </summary>
        [Input("currentPrimaryTimestamp")]
        public Input<string>? CurrentPrimaryTimestamp { get; set; }

        [Input("danglingPVC")]
        private InputList<string>? _danglingPVC;

        /// <summary>
        /// List of all the PVCs created by this cluster and still available which are not attached to a Pod
        /// </summary>
        public InputList<string> DanglingPVC
        {
            get => _danglingPVC ?? (_danglingPVC = new InputList<string>());
            set => _danglingPVC = value;
        }

        /// <summary>
        /// The first recoverability point, stored as a date in RFC3339 format
        /// </summary>
        [Input("firstRecoverabilityPoint")]
        public Input<string>? FirstRecoverabilityPoint { get; set; }

        [Input("healthyPVC")]
        private InputList<string>? _healthyPVC;

        /// <summary>
        /// List of all the PVCs not dangling nor initializing
        /// </summary>
        public InputList<string> HealthyPVC
        {
            get => _healthyPVC ?? (_healthyPVC = new InputList<string>());
            set => _healthyPVC = value;
        }

        [Input("initializingPVC")]
        private InputList<string>? _initializingPVC;

        /// <summary>
        /// List of all the PVCs that are being initialized by this cluster
        /// </summary>
        public InputList<string> InitializingPVC
        {
            get => _initializingPVC ?? (_initializingPVC = new InputList<string>());
            set => _initializingPVC = value;
        }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;

        /// <summary>
        /// List of instance names in the cluster
        /// </summary>
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        /// <summary>
        /// Total number of instances in the cluster
        /// </summary>
        [Input("instances")]
        public Input<int>? Instances { get; set; }

        [Input("instancesReportedState")]
        private InputMap<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusInstancesreportedstateArgs>? _instancesReportedState;

        /// <summary>
        /// the reported state of the instances during the last reconciliation loop
        /// </summary>
        public InputMap<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusInstancesreportedstateArgs> InstancesReportedState
        {
            get => _instancesReportedState ?? (_instancesReportedState = new InputMap<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusInstancesreportedstateArgs>());
            set => _instancesReportedState = value;
        }

        [Input("instancesStatus")]
        private InputMap<ImmutableArray<string>>? _instancesStatus;

        /// <summary>
        /// InstancesStatus indicates in which status the instances are
        /// </summary>
        public InputMap<ImmutableArray<string>> InstancesStatus
        {
            get => _instancesStatus ?? (_instancesStatus = new InputMap<ImmutableArray<string>>());
            set => _instancesStatus = value;
        }

        /// <summary>
        /// How many Jobs have been created by this cluster
        /// </summary>
        [Input("jobCount")]
        public Input<int>? JobCount { get; set; }

        /// <summary>
        /// Stored as a date in RFC3339 format
        /// </summary>
        [Input("lastFailedBackup")]
        public Input<string>? LastFailedBackup { get; set; }

        /// <summary>
        /// Stored as a date in RFC3339 format
        /// </summary>
        [Input("lastSuccessfulBackup")]
        public Input<string>? LastSuccessfulBackup { get; set; }

        /// <summary>
        /// ID of the latest generated node (used to avoid node name clashing)
        /// </summary>
        [Input("latestGeneratedNode")]
        public Input<int>? LatestGeneratedNode { get; set; }

        /// <summary>
        /// OnlineUpdateEnabled shows if the online upgrade is enabled inside the cluster
        /// </summary>
        [Input("onlineUpdateEnabled")]
        public Input<bool>? OnlineUpdateEnabled { get; set; }

        /// <summary>
        /// Current phase of the cluster
        /// </summary>
        [Input("phase")]
        public Input<string>? Phase { get; set; }

        /// <summary>
        /// Reason for the current phase
        /// </summary>
        [Input("phaseReason")]
        public Input<string>? PhaseReason { get; set; }

        /// <summary>
        /// The integration needed by poolers referencing the cluster
        /// </summary>
        [Input("poolerIntegrations")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusPoolerintegrationsArgs>? PoolerIntegrations { get; set; }

        /// <summary>
        /// How many PVCs have been created by this cluster
        /// </summary>
        [Input("pvcCount")]
        public Input<int>? PvcCount { get; set; }

        /// <summary>
        /// Current list of read pods
        /// </summary>
        [Input("readService")]
        public Input<string>? ReadService { get; set; }

        /// <summary>
        /// Total number of ready instances in the cluster
        /// </summary>
        [Input("readyInstances")]
        public Input<int>? ReadyInstances { get; set; }

        [Input("resizingPVC")]
        private InputList<string>? _resizingPVC;

        /// <summary>
        /// List of all the PVCs that have ResizingPVC condition.
        /// </summary>
        public InputList<string> ResizingPVC
        {
            get => _resizingPVC ?? (_resizingPVC = new InputList<string>());
            set => _resizingPVC = value;
        }

        /// <summary>
        /// The list of resource versions of the secrets managed by the operator. Every change here is done in the interest of the instance manager, which will refresh the secret data
        /// </summary>
        [Input("secretsResourceVersion")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusSecretsresourceversionArgs>? SecretsResourceVersion { get; set; }

        /// <summary>
        /// Target primary instance, this is different from the previous one during a switchover or a failover
        /// </summary>
        [Input("targetPrimary")]
        public Input<string>? TargetPrimary { get; set; }

        /// <summary>
        /// The timestamp when the last request for a new primary has occurred
        /// </summary>
        [Input("targetPrimaryTimestamp")]
        public Input<string>? TargetPrimaryTimestamp { get; set; }

        /// <summary>
        /// The timeline of the Postgres cluster
        /// </summary>
        [Input("timelineID")]
        public Input<int>? TimelineID { get; set; }

        /// <summary>
        /// Instances topology.
        /// </summary>
        [Input("topology")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.ClusterStatusTopologyArgs>? Topology { get; set; }

        [Input("unusablePVC")]
        private InputList<string>? _unusablePVC;

        /// <summary>
        /// List of all the PVCs that are unusable because another PVC is missing
        /// </summary>
        public InputList<string> UnusablePVC
        {
            get => _unusablePVC ?? (_unusablePVC = new InputList<string>());
            set => _unusablePVC = value;
        }

        /// <summary>
        /// Current write pod
        /// </summary>
        [Input("writeService")]
        public Input<string>? WriteService { get; set; }

        public ClusterStatusArgs()
        {
        }
        public static new ClusterStatusArgs Empty => new ClusterStatusArgs();
    }
}
