// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Postgresql.V1
{

    /// <summary>
    /// The PgBouncer configuration
    /// </summary>
    public class PoolerSpecPgbouncerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The query that will be used to download the hash of the password of a certain user. Default: "SELECT usename, passwd FROM user_search($1)". In case it is specified, also an AuthQuerySecret has to be specified and no automatic CNPG Cluster integration will be triggered.
        /// </summary>
        [Input("authQuery")]
        public Input<string>? AuthQuery { get; set; }

        /// <summary>
        /// The credentials of the user that need to be used for the authentication query. In case it is specified, also an AuthQuery (e.g. "SELECT usename, passwd FROM pg_shadow WHERE usename=$1") has to be specified and no automatic CNPG Cluster integration will be triggered.
        /// </summary>
        [Input("authQuerySecret")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Postgresql.V1.PoolerSpecPgbouncerAuthquerysecretArgs>? AuthQuerySecret { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Additional parameters to be passed to PgBouncer - please check the CNPG documentation for a list of options you can configure
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// When set to `true`, PgBouncer will disconnect from the PostgreSQL server, first waiting for all queries to complete, and pause all new client connections until this value is set to `false` (default). Internally, the operator calls PgBouncer's `PAUSE` and `RESUME` commands.
        /// </summary>
        [Input("paused")]
        public Input<bool>? Paused { get; set; }

        [Input("pg_hba")]
        private InputList<string>? _pg_hba;

        /// <summary>
        /// PostgreSQL Host Based Authentication rules (lines to be appended to the pg_hba.conf file)
        /// </summary>
        public InputList<string> Pg_hba
        {
            get => _pg_hba ?? (_pg_hba = new InputList<string>());
            set => _pg_hba = value;
        }

        /// <summary>
        /// The pool mode
        /// </summary>
        [Input("poolMode", required: true)]
        public Input<string> PoolMode { get; set; } = null!;

        public PoolerSpecPgbouncerArgs()
        {
            Paused = false;
            PoolMode = "session";
        }
        public static new PoolerSpecPgbouncerArgs Empty => new PoolerSpecPgbouncerArgs();
    }
}
