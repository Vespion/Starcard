// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Postgresql.V1
{

    /// <summary>
    /// By default, the recovery process applies all the available WAL files in the archive (full recovery). However, you can also end the recovery as soon as a consistent state is reached or recover to a point-in-time (PITR) by specifying a `RecoveryTarget` object, as expected by PostgreSQL (i.e., timestamp, transaction Id, LSN, ...). More info: https://www.postgresql.org/docs/current/runtime-config-wal.html#RUNTIME-CONFIG-WAL-RECOVERY-TARGET
    /// </summary>
    public class ClusterSpecBootstrapRecoveryRecoverytargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the backup from which to start the recovery process. If empty (default) the operator will automatically detect the backup based on targetTime or targetLSN if specified. Otherwise use the latest available backup in chronological order.
        /// </summary>
        [Input("backupID")]
        public Input<string>? BackupID { get; set; }

        /// <summary>
        /// Set the target to be exclusive (defaults to true)
        /// </summary>
        [Input("exclusive")]
        public Input<bool>? Exclusive { get; set; }

        /// <summary>
        /// End recovery as soon as a consistent state is reached
        /// </summary>
        [Input("targetImmediate")]
        public Input<bool>? TargetImmediate { get; set; }

        /// <summary>
        /// The target LSN (Log Sequence Number)
        /// </summary>
        [Input("targetLSN")]
        public Input<string>? TargetLSN { get; set; }

        /// <summary>
        /// The target name (to be previously created with `pg_create_restore_point`)
        /// </summary>
        [Input("targetName")]
        public Input<string>? TargetName { get; set; }

        /// <summary>
        /// The target timeline ("latest" or a positive integer)
        /// </summary>
        [Input("targetTLI")]
        public Input<string>? TargetTLI { get; set; }

        /// <summary>
        /// The target time as a timestamp in the RFC3339 standard
        /// </summary>
        [Input("targetTime")]
        public Input<string>? TargetTime { get; set; }

        /// <summary>
        /// The target transaction ID
        /// </summary>
        [Input("targetXID")]
        public Input<string>? TargetXID { get; set; }

        public ClusterSpecBootstrapRecoveryRecoverytargetArgs()
        {
        }
        public static new ClusterSpecBootstrapRecoveryRecoverytargetArgs Empty => new ClusterSpecBootstrapRecoveryRecoverytargetArgs();
    }
}
