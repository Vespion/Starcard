// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Postgresql.V1
{

    /// <summary>
    /// Options to specify LDAP configuration
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecPostgresqlLdap
    {
        /// <summary>
        /// Bind as authentication configuration
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecPostgresqlLdapBindasauth BindAsAuth;
        /// <summary>
        /// Bind+Search authentication configuration
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecPostgresqlLdapBindsearchauth BindSearchAuth;
        /// <summary>
        /// LDAP server port
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// LDAP schema to be used, possible options are `ldap` and `ldaps`
        /// </summary>
        public readonly string Scheme;
        /// <summary>
        /// LDAP hostname or IP address
        /// </summary>
        public readonly string Server;
        /// <summary>
        /// Set to 'true' to enable LDAP over TLS. 'false' is default
        /// </summary>
        public readonly bool Tls;

        [OutputConstructor]
        private ClusterSpecPostgresqlLdap(
            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecPostgresqlLdapBindasauth bindAsAuth,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecPostgresqlLdapBindsearchauth bindSearchAuth,

            int port,

            string scheme,

            string server,

            bool tls)
        {
            BindAsAuth = bindAsAuth;
            BindSearchAuth = bindSearchAuth;
            Port = port;
            Scheme = scheme;
            Server = server;
            Tls = tls;
        }
    }
}
