// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Postgresql.V1
{

    /// <summary>
    /// Bootstrap the cluster from a backup
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecBootstrapRecovery
    {
        /// <summary>
        /// The backup we need to restore
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoveryBackup Backup;
        /// <summary>
        /// Name of the database used by the application. Default: `app`.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Name of the owner of the database in the instance to be used by applications. Defaults to the value of the `database` key.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// By default, the recovery process applies all the available WAL files in the archive (full recovery). However, you can also end the recovery as soon as a consistent state is reached or recover to a point-in-time (PITR) by specifying a `RecoveryTarget` object, as expected by PostgreSQL (i.e., timestamp, transaction Id, LSN, ...). More info: https://www.postgresql.org/docs/current/runtime-config-wal.html#RUNTIME-CONFIG-WAL-RECOVERY-TARGET
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoveryRecoverytarget RecoveryTarget;
        /// <summary>
        /// Name of the secret containing the initial credentials for the owner of the user database. If empty a new secret will be created from scratch
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoverySecret Secret;
        /// <summary>
        /// The external cluster whose backup we will restore. This is also used as the name of the folder under which the backup is stored, so it must be set to the name of the source cluster
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private ClusterSpecBootstrapRecovery(
            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoveryBackup backup,

            string database,

            string owner,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoveryRecoverytarget recoveryTarget,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapRecoverySecret secret,

            string source)
        {
            Backup = backup;
            Database = database;
            Owner = owner;
            RecoveryTarget = recoveryTarget;
            Secret = secret;
            Source = source;
        }
    }
}
