// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Postgresql.V1
{

    /// <summary>
    /// Bootstrap the cluster taking a physical backup of another compatible PostgreSQL instance
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecBootstrapPg_basebackup
    {
        /// <summary>
        /// Name of the database used by the application. Default: `app`.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Name of the owner of the database in the instance to be used by applications. Defaults to the value of the `database` key.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// Name of the secret containing the initial credentials for the owner of the user database. If empty a new secret will be created from scratch
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapPg_basebackupSecret Secret;
        /// <summary>
        /// The name of the server of which we need to take a physical backup
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private ClusterSpecBootstrapPg_basebackup(
            string database,

            string owner,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapPg_basebackupSecret secret,

            string source)
        {
            Database = database;
            Owner = owner;
            Secret = secret;
            Source = source;
        }
    }
}
