// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Postgresql.V1
{

    /// <summary>
    /// Bootstrap the cluster via initdb
    /// </summary>
    [OutputType]
    public sealed class ClusterSpecBootstrapInitdb
    {
        /// <summary>
        /// Whether the `-k` option should be passed to initdb, enabling checksums on data pages (default: `false`)
        /// </summary>
        public readonly bool DataChecksums;
        /// <summary>
        /// Name of the database used by the application. Default: `app`.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The value to be passed as option `--encoding` for initdb (default:`UTF8`)
        /// </summary>
        public readonly string Encoding;
        /// <summary>
        /// Bootstraps the new cluster by importing data from an existing PostgreSQL instance using logical backup (`pg_dump` and `pg_restore`)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbImport Import;
        /// <summary>
        /// The value to be passed as option `--lc-ctype` for initdb (default:`C`)
        /// </summary>
        public readonly string LocaleCType;
        /// <summary>
        /// The value to be passed as option `--lc-collate` for initdb (default:`C`)
        /// </summary>
        public readonly string LocaleCollate;
        /// <summary>
        /// The list of options that must be passed to initdb when creating the cluster. Deprecated: This could lead to inconsistent configurations, please use the explicit provided parameters instead. If defined, explicit values will be ignored.
        /// </summary>
        public readonly ImmutableArray<string> Options;
        /// <summary>
        /// Name of the owner of the database in the instance to be used by applications. Defaults to the value of the `database` key.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// List of SQL queries to be executed as a superuser in the application database right after is created - to be used with extreme care (by default empty)
        /// </summary>
        public readonly ImmutableArray<string> PostInitApplicationSQL;
        /// <summary>
        /// PostInitApplicationSQLRefs points references to ConfigMaps or Secrets which contain SQL files, the general implementation order to these references is from all Secrets to all ConfigMaps, and inside Secrets or ConfigMaps, the implementation order is same as the order of each array (by default empty)
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbPostinitapplicationsqlrefs PostInitApplicationSQLRefs;
        /// <summary>
        /// List of SQL queries to be executed as a superuser immediately after the cluster has been created - to be used with extreme care (by default empty)
        /// </summary>
        public readonly ImmutableArray<string> PostInitSQL;
        /// <summary>
        /// List of SQL queries to be executed as a superuser in the `template1` after the cluster has been created - to be used with extreme care (by default empty)
        /// </summary>
        public readonly ImmutableArray<string> PostInitTemplateSQL;
        /// <summary>
        /// Name of the secret containing the initial credentials for the owner of the user database. If empty a new secret will be created from scratch
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbSecret Secret;
        /// <summary>
        /// The value in megabytes (1 to 1024) to be passed to the `--wal-segsize` option for initdb (default: empty, resulting in PostgreSQL default: 16MB)
        /// </summary>
        public readonly int WalSegmentSize;

        [OutputConstructor]
        private ClusterSpecBootstrapInitdb(
            bool dataChecksums,

            string database,

            string encoding,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbImport import,

            string localeCType,

            string localeCollate,

            ImmutableArray<string> options,

            string owner,

            ImmutableArray<string> postInitApplicationSQL,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbPostinitapplicationsqlrefs postInitApplicationSQLRefs,

            ImmutableArray<string> postInitSQL,

            ImmutableArray<string> postInitTemplateSQL,

            Pulumi.Kubernetes.Types.Outputs.Postgresql.V1.ClusterSpecBootstrapInitdbSecret secret,

            int walSegmentSize)
        {
            DataChecksums = dataChecksums;
            Database = database;
            Encoding = encoding;
            Import = import;
            LocaleCType = localeCType;
            LocaleCollate = localeCollate;
            Options = options;
            Owner = owner;
            PostInitApplicationSQL = postInitApplicationSQL;
            PostInitApplicationSQLRefs = postInitApplicationSQLRefs;
            PostInitSQL = postInitSQL;
            PostInitTemplateSQL = postInitTemplateSQL;
            Secret = secret;
            WalSegmentSize = walSegmentSize;
        }
    }
}
